{"version":3,"sources":["styles.tsx","components/organisms/block-translation/styles.tsx","components/atoms/img-figure/src/Ellipse1.svg","components/atoms/img-figure/src/Ellipse2.svg","components/atoms/img-figure/styles.tsx","components/molecules/block-with-original/styles.tsx","components/atoms/img-figure/index.tsx","components/atoms/original-word/styles.tsx","components/atoms/original-word/index.tsx","components/atoms/tooltip/styles.tsx","components/atoms/tooltip/index.tsx","components/molecules/block-with-original/index.tsx","components/atoms/word/styles.tsx","components/molecules/block-for-sort/styles.tsx","components/atoms/word/index.tsx","components/molecules/block-for-sort/index.tsx","components/atoms/button/styles.tsx","components/atoms/status-text/styles.tsx","components/molecules/check-panel/styles.tsx","components/atoms/button/index.tsx","components/atoms/status-text/index.tsx","components/molecules/check-panel/index.tsx","components/atoms/title/styles.tsx","components/atoms/title/index.tsx","utils/handler.ts","components/organisms/block-translation/queries.ts","components/organisms/block-translation/index.tsx","components/organisms/block-translation/container.tsx","components/templates/app/styles.tsx","components/templates/app/index.tsx","components/pages/main/index.tsx","index.tsx"],"names":["mainBg","widthOptimal","GlobalStyle","createGlobalStyle","BlockTranslationStyled","styled","div","StyledImgFigure","img1","img2","blockOriginalHeight","StyledBlockWithOriginal","ImgFigure","StyledOriginalWord","span","OriginalWord","children","trianglePosTop","borderColor","StyledTooltip","StyledTooltipInsert","Tooltip","props","BlockWithOriginal","split","map","word","i","StyledWordWrapper","StyledWord","StyledBlockForSortWrapper","rowSize","unsorted","css","StyledBlockForSort","shadow","Word","BlockForSort","list","link","linkShadow","ref","item","name","id","StyledButton","button","StyledStatusText","success","StyledCheckPanel","show","Button","linkOut","onClick","check","StatusText","CheckPanel","StyledTitle","h1","Title","Handler","shuffleArray","array","length","j","Math","floor","random","temp","sortArrayByArray","newArr","originalArr","sort","a","b","indexOf","splitPhrase","initialEn","reSort","phraseArr","checkWordsOrder","block","phraseOriginal","call","e","getAttribute","join","trim","reproducePhrase","phrase","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","setSameWordWidth","elements","getElements","items","concatAll","args","push","maxWidth","max","offsetWidth","style","width","setSameBlockHeight","extra","runByEvent","maxHeight","element","removeAttribute","getHeight","height","callback","events","addEventListener","el","styles","getComputedStyle","offsetHeight","parseFloat","paddingTop","paddingBottom","marginBottom","phraseQuery","gql","containerBlockTranslation","Wrapped","useState","phraseRu","setPhraseRu","phraseEn","setPhraseEn","showStatus","setShowStatus","result","setResult","listUnsorted","setListUnsorted","refSorted","useRef","refUnsorted","refShadow","useQuery","loading","data","error","useEffect","undefined","sentenceAll","ru","en","Sortable","current","animation","swapThreshold","group","dragoverBubble","store","get","sortable","order","toArray","localStorage","setItem","options","set","initialOrder","getItem","setTimeout","parentNode","refOutLink","useOnclickOutside","allProp","checkPhrase","StyledApp","App","Main","client","ApolloClient","uri","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b38b5b3.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\r\n\r\nconst mainBg = \"#F5F5F5\";\r\nconst widthOptimal = \"482px\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n    *{\r\n        font-family: 'Roboto', sans-serif;\r\n        font-weight: 400;\r\n        font-style: normal;\r\n        color: black;\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n    }\r\n`\r\n\r\nexport default GlobalStyle;\r\nexport {mainBg,widthOptimal};","import styled from \"styled-components\";\r\nimport {widthOptimal} from \"../../../styles\";\r\n\r\n\r\nconst BlockTranslationStyled = styled.div`\r\n    min-width: 320px;\r\n    max-width: ${widthOptimal};\r\n    flex-basis: ${widthOptimal};\r\n    @media (max-width: ${widthOptimal}) {\r\n        padding: 20px;\r\n    }\r\n`\r\n\r\nexport {BlockTranslationStyled};","export default __webpack_public_path__ + \"static/media/Ellipse1.bd77966c.svg\";","export default __webpack_public_path__ + \"static/media/Ellipse2.07bc130c.svg\";","import styled from \"styled-components\";\r\nimport {widthOptimal} from \"../../../styles\";\r\nimport img1 from './src/Ellipse1.svg';\r\nimport img2 from './src/Ellipse2.svg';\r\n\r\nconst StyledImgFigure = styled.div`\r\n    height: 200px;\r\n    width: 185.65px;\r\n    background-image: url(${img1}), url(${img2});\r\n    background-position: top, bottom;\r\n    background-repeat: no-repeat;\r\n    background-size: auto;\r\n    @media (max-width: ${widthOptimal}) {\r\n        display: none;\r\n    }\r\n`\r\n\r\nexport {StyledImgFigure};","import styled from \"styled-components\";\r\nimport {widthOptimal} from \"../../../styles\";\r\nimport {StyledImgFigure} from \"../../atoms/img-figure/styles\";\r\n\r\n\r\nexport const blockOriginalHeight = \"207.5px;\";\r\n\r\nconst StyledBlockWithOriginal = styled.div`\r\n    margin-bottom: 49.5px;\r\n    height: ${blockOriginalHeight};\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n        & ${StyledImgFigure} {\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n        }\r\n    @media (max-width: ${widthOptimal}) {\r\n        height: auto;\r\n        max-height: ${blockOriginalHeight};\r\n    }\r\n`\r\n\r\nexport {StyledBlockWithOriginal};","import React from 'react';\r\nimport {StyledImgFigure} from \"./styles\";\r\n\r\nconst ImgFigure: React.FC = () => {\r\n    return <StyledImgFigure>&nbsp;</StyledImgFigure>;\r\n}\r\n\r\nexport default ImgFigure;","import styled from \"styled-components\";\r\n\r\nconst StyledOriginalWord = styled.span`\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n    border-bottom: 1px dashed #000000;\r\n    margin: 0 5px 10px;\r\n`\r\n\r\nexport {StyledOriginalWord};","import React from 'react';\r\nimport { IChildren } from '../../../interfaces';\r\nimport {StyledOriginalWord} from \"./styles\";\r\n\r\n\r\nconst OriginalWord: React.FC<IChildren> = ({children}) => {\r\n    return <StyledOriginalWord>{children}</StyledOriginalWord>;\r\n}\r\n\r\nexport default OriginalWord;","import styled from \"styled-components\";\r\nimport {mainBg, widthOptimal} from \"../../../styles\";\r\nimport {blockOriginalHeight} from \"../../molecules/block-with-original/styles\";\r\n\r\nconst trianglePosTop = \"58px\";\r\nconst borderColor = \"#252525\";\r\n\r\nconst StyledTooltip = styled.div`\r\n    min-height: 91px;\r\n    max-height: 100%;\r\n    width: 286px;\r\n    position: relative;\r\n    background: ${mainBg};\r\n    border: 2px solid ${borderColor};\r\n    border-radius: 18px;\r\n    border-bottom-left-radius: 8px;\r\n    \r\n    //triangle\r\n    &:after {\r\n        content: '';\r\n        display: block;  \r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        top: ${trianglePosTop};\r\n        right: calc(100% - 2px);\r\n        border: 10px solid transparent;\r\n        border-right-color: ${mainBg};\r\n        border-bottom-color: ${mainBg};\r\n    }\r\n    \r\n    //border triangle\r\n    &:before {\r\n        content: '';\r\n        display: block;  \r\n        position: absolute;\r\n        width: 0;\r\n        height: 0;\r\n        top: ${trianglePosTop};\r\n        right: 100%;\r\n        border: 11px solid transparent;\r\n        border-right-color: ${borderColor};\r\n        border-bottom-color: ${borderColor};\r\n        border-bottom-left-radius:3px;\r\n    }\r\n    \r\n    @media (max-width: ${widthOptimal}) {\r\n        width: 100%;\r\n        border-bottom-left-radius: 18px;\r\n        \r\n        &:before, &:after{\r\n            display: none;\r\n        }\r\n    }\r\n`\r\n\r\nconst StyledTooltipInsert = styled.div`\r\n    width: 100%;\r\n    max-height: ${blockOriginalHeight};\r\n    padding: 17px 13px 5px;\r\n    display: flex;\r\n    align-content: flex-start;\r\n    flex-wrap: wrap;\r\n    overflow: auto;\r\n    border-radius: 18px;\r\n    ::-webkit-scrollbar{\r\n        width: 5px;\r\n        height: 5px;\r\n    }\r\n    ::-webkit-scrollbar-thumb{\r\n        background: linear-gradient(180deg, transparent 10%, ${borderColor} 10% 90%, transparent 90%);\r\n        border-radius: 0;\r\n    }\r\n    ::-webkit-scrollbar-track{\r\n        background: transparent;\r\n        border-radius: 0;\r\n        box-shadow: inset 0 0 0 0 #F0F0F0;\r\n    }\r\n`\r\n\r\n\r\nexport {StyledTooltip, StyledTooltipInsert};","import React from 'react';\r\nimport {StyledTooltip, StyledTooltipInsert} from \"./styles\";\r\nimport {IChildren} from \"../../../interfaces\";\r\n\r\nconst Tooltip: React.FC<IChildren> = (props) => {\r\n    return (\r\n        <StyledTooltip {...props}>\r\n            <StyledTooltipInsert>\r\n                {props.children}\r\n            </StyledTooltipInsert>\r\n        </StyledTooltip>\r\n    );\r\n}\r\n\r\nexport default Tooltip;","import React from 'react';\r\nimport {StyledBlockWithOriginal} from \"./styles\";\r\nimport ImgFigure from \"../../atoms/img-figure\";\r\nimport OriginalWord from \"../../atoms/original-word\";\r\nimport Tooltip from \"../../atoms/tooltip\";\r\n\r\n\r\nconst BlockWithOriginal: React.FC<{ children: string }> = (props) => {\r\n    return (\r\n        <StyledBlockWithOriginal {...props}>\r\n            <ImgFigure/>\r\n            <Tooltip>\r\n                {props.children.split(\" \").map(((word, i) =>\r\n                        <OriginalWord key={i}>{word}</OriginalWord>\r\n                ))}\r\n            </Tooltip>\r\n        </StyledBlockWithOriginal>\r\n    );\r\n}\r\n\r\nexport default BlockWithOriginal;","import styled from \"styled-components\";\r\n\r\nconst StyledWordWrapper = styled.div`\r\n    display: flex;\r\n    padding: 7px 5px 8px;\r\n    box-sizing: border-box;\r\n    outline: none;\r\n    text-align: center;\r\n`\r\n\r\nconst StyledWord = styled.span`\r\n    font-size: 18px;\r\n    height: 30px;\r\n    line-height: 21px;\r\n    padding: 4px 11px 5px;\r\n    background: #FFFFFF;\r\n    border: 1px solid #C9C9C9;\r\n    box-sizing: border-box;\r\n    box-shadow: 0 8px 4px -6px rgba(0, 0, 0, 0.25);\r\n    border-radius: 13px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    user-select: none;\r\n`\r\n\r\n\r\nexport {StyledWord, StyledWordWrapper};","import styled, {css} from \"styled-components\";\r\nimport {widthOptimal} from \"../../../styles\";\r\nimport {StyledWord} from \"../../atoms/word/styles\";\r\n\r\nconst rowSize = 45;\r\nconst lineSize = 1;\r\n\r\nconst StyledBlockForSortWrapper = styled.div<{ unsorted?: boolean }>`\r\n    min-height: 90px;\r\n    align-items:  center;\r\n    margin-bottom: 40px;\r\n    position: relative;\r\n    background: repeating-linear-gradient( 180deg, transparent ${lineSize}px ${rowSize}px, #4B4B4B ${rowSize}px ${rowSize + lineSize}px);\r\n    ${({unsorted}) => unsorted && css`\r\n        background:transparent;\r\n        margin-bottom: 30px;\r\n        min-height: 135px;\r\n        @media (max-width: ${widthOptimal}) {\r\n            min-height: ${rowSize}px;\r\n        }\r\n    `};\r\n`\r\n\r\nconst StyledBlockForSort = styled.div<{ unsorted?: boolean, shadow?: boolean }>`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    align-content: flex-start;\r\n    flex-wrap: wrap;\r\n    min-height: 100%;\r\n    z-index: 1;\r\n    position: relative;\r\n    ${props => props.unsorted && css`\r\n        background:transparent;\r\n    `};\r\n    ${props => props.shadow && css`\r\n        height: 100%;\r\n        width: 100%;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 0;\r\n        & ${StyledWord}{\r\n            border: 0;\r\n            background: #E6E6E6;\r\n            box-shadow: inset 0 8px 4px -6px rgba(0, 0, 0, 0.25);\r\n        }\r\n    `};\r\n`\r\n\r\nexport {StyledBlockForSort, StyledBlockForSortWrapper, lineSize};","import React from 'react';\r\nimport {IChildren} from '../../../interfaces';\r\nimport {StyledWord, StyledWordWrapper} from \"./styles\";\r\n\r\nconst Word: React.FC<IChildren> = (props) => {\r\n    return (\r\n        <StyledWordWrapper {...props}>\r\n            <StyledWord>{props.children}</StyledWord>\r\n        </StyledWordWrapper>\r\n    );\r\n}\r\n\r\nexport default Word;","import React, {RefObject} from 'react'\r\nimport {ItemType} from '../../../interfaces';\r\nimport {StyledBlockForSortWrapper, StyledBlockForSort} from './styles';\r\nimport Word from \"../../atoms/word\";\r\n\r\ninterface IT {\r\n    link: RefObject<HTMLDivElement>,\r\n    linkShadow?: RefObject<HTMLDivElement>,\r\n    unsorted?: boolean,\r\n    list?: ItemType[]\r\n}\r\n\r\nconst BlockForSort: React.FC<IT> = ({list, link, unsorted, linkShadow}) => {\r\n\r\n    return (\r\n        <StyledBlockForSortWrapper unsorted={unsorted}>\r\n            <StyledBlockForSort ref={link}>\r\n                {\r\n                    list?.map((item) => (\r\n                        <Word data-id={item.name} key={item.id}>{item.name}</Word>\r\n                    ))\r\n                }\r\n            </StyledBlockForSort>\r\n            {\r\n                unsorted\r\n                &&\r\n                <StyledBlockForSort ref={linkShadow} shadow>\r\n                    {\r\n                        list?.map((item, i) => (\r\n                            <Word key={i}>&nbsp;</Word>\r\n                        ))\r\n                    }\r\n                </StyledBlockForSort>\r\n            }\r\n        </StyledBlockForSortWrapper>\r\n    );\r\n}\r\n\r\nexport default BlockForSort;","import styled from \"styled-components\";\r\n\r\nconst StyledButton = styled.button`\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    line-height: 21px;\r\n    background: linear-gradient(91.2deg, #FFFFFF 0%, #F2F2F2 100%);\r\n    box-shadow: -2px -4px 8px #FFFFFF, 2px 4px 8px rgba(0, 0, 0, 0.2);\r\n    border-radius: 88px;\r\n    border: 0;\r\n    position: relative;\r\n    z-index: 1;\r\n    cursor: pointer;\r\n    max-width: 470px;\r\n    width: calc(100% - 12px);\r\n    height: 68px;\r\n    transition: linear all .1s;\r\n    &:active{\r\n        box-shadow: inset -2px -4px 12px #FFFFFF, inset 2px 4px 8px rgba(0, 0, 0, 0.2);\r\n    }\r\n`\r\n\r\nexport {StyledButton};","import styled, {css} from \"styled-components\";\r\n\r\nconst StyledStatusText = styled.span<{ success?: boolean }>`\r\n    width: 100%;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n    margin-bottom: 27px;\r\n    visibility: hidden;\r\n    opacity: 0;\r\n    position: absolute;\r\n    height: 0;\r\n    color: #FF0000;\r\n    text-shadow: -1px -2px 2px #FFFFFF, 1px 2px 2px rgba(91, 13, 13, 0.5);\r\n    ${({success}) => success && css`\r\n        color: green;\r\n        text-shadow: -1px -2px 2px #FFFFFF, 1px 2px 2px green;\r\n    `}\r\n`\r\n\r\n\r\nexport {StyledStatusText};","import styled, {css} from \"styled-components\";\r\nimport {StyledButton} from \"../../atoms/button/styles\";\r\nimport {StyledStatusText} from \"../../atoms/status-text/styles\";\r\n\r\nconst StyledCheckPanel = styled.div<{ show?: boolean }>`\r\n    width: 100%;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    & *{\r\n        transition: linear all .1s;\r\n    }\r\n    ${({show}) => show && css`\r\n        &>${StyledStatusText}{\r\n            height: 100%;\r\n            visibility: visible;\r\n            opacity: 1;\r\n        }\r\n        &>${StyledButton}{\r\n            transform: translateY(80%);\r\n        }\r\n    `};\r\n`\r\n\r\nexport {StyledCheckPanel};","import React, {RefObject} from 'react';\r\nimport {StyledButton} from \"./styles\";\r\n\r\ninterface IButton {\r\n    children: React.ReactNode\r\n    check?: (e: React.MouseEvent) => void\r\n    linkOut: RefObject<HTMLButtonElement>\r\n}\r\n\r\nconst Button: React.FC<IButton> = (props) => {\r\n    return <StyledButton ref={props.linkOut} onClick={props.check}>{props.children}</StyledButton>;\r\n}\r\n\r\nexport default Button;  ","import React from 'react';\r\nimport {StyledStatusText} from \"./styles\";\r\n\r\ninterface IStatusText {\r\n    children: React.ReactNode\r\n    show?: boolean\r\n    success?: boolean\r\n}\r\n\r\nconst StatusText: React.FC<IStatusText> = (props) => {\r\n    return (\r\n        <StyledStatusText success={props.success} show={props.show} {...props}>\r\n            {props.children}\r\n        </StyledStatusText>\r\n    );\r\n}\r\n\r\nexport default StatusText;","import React from 'react';\r\nimport {StyledCheckPanel} from \"./styles\";\r\nimport ButtonS from \"../../atoms/button\";\r\nimport StatusText from \"../../atoms/status-text\";\r\nimport {RefObject} from 'react';\r\n\r\ninterface IStatusText {\r\n    show?: boolean\r\n    success?: boolean\r\n    check: (e: React.MouseEvent) => void\r\n    linkOut: RefObject<HTMLButtonElement>\r\n}\r\n\r\nconst CheckPanel: React.FC<IStatusText> = (props) => {\r\n    return (\r\n        <StyledCheckPanel show={props.show} {...props}>\r\n            {\r\n                <StatusText success={props.success}>\r\n                    {props.success ? \"Success!\" : \"Something wrong!\"}\r\n                </StatusText>\r\n            }\r\n            <ButtonS {...props}>\r\n                Check\r\n            </ButtonS>\r\n        </StyledCheckPanel>\r\n    );\r\n}\r\n\r\nexport default CheckPanel;","import styled from \"styled-components\";\r\nimport {widthOptimal} from \"../../../styles\";\r\n\r\nconst StyledTitle = styled.h1`\r\n    font-size: 36px;\r\n    line-height: 42px;\r\n    color: #252525;\r\n    text-shadow: -2px -4px 3px #FFFFFF, 2px 4px 3px rgba(0, 0, 0, 0.25);\r\n    margin-bottom: 56px;\r\n    letter-spacing: -0.3px;\r\n    @media (max-width: ${widthOptimal}) {\r\n        text-align: center;\r\n        font-size: 24px;\r\n        margin-bottom: 30px;\r\n    }\r\n`\r\n\r\nexport {StyledTitle};","import React from 'react';\r\nimport {StyledTitle} from \"./styles\";\r\nimport {IChildren} from \"../../../interfaces\";\r\n\r\nconst Title: React.FC<IChildren> = (props) => {\r\n    return <StyledTitle {...props}>{props.children}</StyledTitle>;\r\n}\r\n\r\nexport default Title;","const Handler = {\r\n    shuffleArray: <T>(array: T[]): void => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            const temp = array[i];\r\n            array[i] = array[j];\r\n            array[j] = temp;\r\n        }\r\n    },\r\n    sortArrayByArray: <T>(newArr: T[], originalArr: T[]): Array<T> => {\r\n        newArr.sort((a: any, b: any): number => originalArr.indexOf(a) - originalArr.indexOf(b));\r\n        return newArr;\r\n    },\r\n    splitPhrase: (initialEn: string, reSort = false) => {\r\n        let phraseArr: any[] = [];\r\n        if (!initialEn) {\r\n            return phraseArr;\r\n        }\r\n        phraseArr = initialEn.split(\" \");\r\n        if (reSort) Handler.shuffleArray(phraseArr);\r\n        phraseArr = phraseArr.map((item, i) => {\r\n            return {\r\n                id: i + 1,\r\n                name: item\r\n            }\r\n        })\r\n        return phraseArr;\r\n    },\r\n    checkWordsOrder: (block: HTMLElement, phraseOriginal: string): boolean => {\r\n        let phrase = [].map.call(block.children, (e: HTMLElement) => {\r\n            return e.getAttribute(\"data-id\");\r\n        })\r\n        return phrase.join(' ') === phraseOriginal.trim();\r\n    },\r\n    reproducePhrase: (phrase: string): void => {\r\n        let utterance = new SpeechSynthesisUtterance(phrase);\r\n        utterance.lang = 'en-US';\r\n        window.speechSynthesis.speak(utterance);\r\n    },\r\n    setSameWordWidth: (...args: HTMLElement[]) => {\r\n        const getElements = (items: Array<HTMLElement>) => {\r\n            return [].map.call(items, ((e: HTMLElement) => {\r\n                return e.children[0]\r\n            }))\r\n        }\r\n        const concatAll = (args: HTMLElement[]) => {\r\n            let newArr: any[] = [];\r\n            [].map.call(args, e => {\r\n                newArr.push(...e)\r\n            });\r\n            return newArr;\r\n        }\r\n\r\n        let elements: Array<any>;\r\n\r\n        elements = concatAll(args);\r\n        elements = getElements(elements)\r\n\r\n        let maxWidth = 0;\r\n        for (let i = 0; i < elements.length; ++i) {\r\n            maxWidth = Math.max(maxWidth, elements[i].offsetWidth)\r\n        }\r\n        for (let i = 0; i < elements.length; ++i) {\r\n            elements[i].style.width = maxWidth + \"px\";\r\n        }\r\n    },\r\n    setSameBlockHeight: (extra: number, ...args: HTMLElement[]) => {\r\n        Handler.runByEvent(() => {\r\n            let maxHeight = 0;\r\n\r\n            [].map.call(args, (element: any) => {\r\n                element.removeAttribute(\"style\")\r\n                maxHeight = Math.max(maxHeight, Handler.getHeight(element));\r\n            });\r\n\r\n            maxHeight += extra;\r\n            [].map.call(args, (element: any) => {\r\n                element.style.height = maxHeight + \"px\";\r\n            })\r\n        }, ['resize'])\r\n    },\r\n    runByEvent: (callback: () => void, events: Array<string>) => {\r\n        (callback)();\r\n        events.map(e => {\r\n            window.addEventListener(e, () => {\r\n                callback();\r\n            })\r\n        })\r\n    },\r\n    getHeight: (el: HTMLElement) => {\r\n        const styles = window.getComputedStyle(el);\r\n        const height = el.offsetHeight;\r\n        const paddingTop = parseFloat(styles.paddingTop);\r\n        const paddingBottom = parseFloat(styles.paddingBottom);\r\n        const marginBottom = parseFloat(styles.marginBottom);\r\n        return height - paddingTop - paddingBottom - marginBottom;\r\n    }\r\n}\r\n\r\nexport default Handler;","import {gql} from 'apollo-boost';\r\n\r\nexport const phraseQuery = gql`\r\n    query{\r\n        sentenceAll{\r\n            en\r\n            ru\r\n        }\r\n    }\r\n`;","import React from \"react\";\r\nimport {BlockTranslationStyled} from \"./styles\";\r\nimport BlockWithOriginal from \"../../molecules/block-with-original\";\r\nimport BlockForSort from '../../molecules/block-for-sort';\r\nimport CheckPanel from \"../../molecules/check-panel\";\r\nimport Title from \"../../atoms/title\";\r\nimport {ItemType} from \"../../../interfaces\";\r\nimport {RefObject} from \"react\";\r\nimport containerBlockTranslation from \"./container\";\r\n\r\ninterface IBlockTranslation {\r\n    phraseRu: string\r\n    refSorted: RefObject<HTMLDivElement>\r\n    refUnsorted: RefObject<HTMLDivElement>\r\n    refShadow: RefObject<HTMLDivElement>\r\n    listUnsorted: ItemType[]\r\n    checkPhrase: (e: React.MouseEvent) => void\r\n    result: boolean\r\n    showStatus: boolean\r\n    refOutLink: RefObject<HTMLButtonElement>\r\n}\r\n\r\nconst BlockTranslation: React.FC<IBlockTranslation> = ({\r\n   phraseRu,\r\n   refSorted,\r\n   refUnsorted,\r\n   refShadow,\r\n   listUnsorted,\r\n   checkPhrase,\r\n   result,\r\n   showStatus,\r\n   refOutLink\r\n}) => {\r\n\r\n    return (\r\n        <BlockTranslationStyled>\r\n            <Title>Translate this sentence</Title>\r\n            <BlockWithOriginal>{phraseRu}</BlockWithOriginal>\r\n            <BlockForSort link={refSorted}/>\r\n            <BlockForSort linkShadow={refShadow} link={refUnsorted} list={listUnsorted} unsorted/>\r\n            <CheckPanel linkOut={refOutLink} check={checkPhrase} success={result} show={showStatus}/>\r\n        </BlockTranslationStyled>\r\n    );\r\n}\r\n\r\n\r\nexport default containerBlockTranslation(BlockTranslation);","import React, {useEffect, useState} from \"react\";\r\nimport Sortable from \"sortablejs\";\r\nimport Handler from \"../../../utils/handler\";\r\nimport {useRef} from \"react\";\r\nimport {ItemType} from \"../../../interfaces\";\r\nimport useOnclickOutside from \"react-cool-onclickoutside\";\r\nimport {phraseQuery} from \"./queries\";\r\nimport {useQuery} from \"react-apollo\";\r\nimport { lineSize } from \"../../molecules/block-for-sort/styles\";\r\n\r\nconst offlineRu = \"Он ездит в Латвию и Россию каждое лето\";\r\nconst offlineEn = \"He travels to Latvia and Russia every summer\";\r\n\r\nconst containerBlockTranslation = (Wrapped: Function) => (props: Object) => {\r\n    const [phraseRu, setPhraseRu] = useState(\"\");\r\n    const [phraseEn, setPhraseEn] = useState(\"\");\r\n    const [showStatus, setShowStatus] = useState(false);\r\n    const [result, setResult] = useState(false);\r\n    const [listUnsorted, setListUnsorted] = useState<ItemType[]>([]);\r\n    const refSorted = useRef<any | null>(null);\r\n    const refUnsorted = useRef<any | null>(null);\r\n    const refShadow = useRef<any | null>(null);\r\n\r\n    const {loading, data, error} = useQuery(phraseQuery);\r\n\r\n    useEffect(() => {\r\n        if (!loading) {\r\n            if (error !== undefined) {\r\n                setPhraseRu(offlineRu);\r\n                setPhraseEn(offlineEn);\r\n            } else {\r\n                Handler.shuffleArray(data.sentenceAll)\r\n                setPhraseRu(data.sentenceAll[0].ru);\r\n                setPhraseEn(data.sentenceAll[0].en);\r\n            }\r\n        }\r\n    }, [loading]);\r\n\r\n    useEffect(() => {\r\n        if (phraseEn) {\r\n            const phraseArr = Handler.splitPhrase(phraseEn, true);\r\n            setListUnsorted(phraseArr);\r\n        }\r\n    }, [phraseEn])\r\n\r\n    useEffect(() => {\r\n        new Sortable(refSorted.current, {\r\n            animation: 250,\r\n            swapThreshold: 1,\r\n            group: \"shared\",\r\n            dragoverBubble: false,\r\n        });\r\n        new Sortable(refUnsorted.current, {\r\n            animation: 250,\r\n            swapThreshold: 1,\r\n            group: \"shared\",\r\n            dragoverBubble: false,\r\n            store: {\r\n                get: function (sortable: any) {\r\n                    let order = sortable.toArray();\r\n                    localStorage.setItem(sortable.options.group.name, order.join('|'));\r\n                    return order;\r\n                },\r\n                set: function (sortable: any) {\r\n                    let order = sortable.toArray();\r\n                    const initialOrder = localStorage.getItem(sortable.options.group.name);\r\n                    if (initialOrder) {\r\n                        setTimeout(() => {\r\n                            order = Handler.sortArrayByArray(order, initialOrder.split('|'));\r\n                            sortable.sort(order, true);\r\n                        }, 1500);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        if (listUnsorted.length) {\r\n            Handler.setSameWordWidth(\r\n                refUnsorted.current.children,\r\n                refShadow.current.children\r\n            );\r\n            Handler.setSameBlockHeight(\r\n                lineSize,\r\n                refSorted.current.parentNode,\r\n                refUnsorted.current,\r\n            );\r\n        }\r\n    }, [listUnsorted])\r\n\r\n    const checkPhrase = () => {\r\n        const check = Handler.checkWordsOrder(refSorted.current, phraseEn);\r\n\r\n        setResult(check);\r\n        setShowStatus(true);\r\n        if (check) {\r\n            Handler.reproducePhrase(phraseEn);\r\n        }\r\n    }\r\n\r\n    const refOutLink = useOnclickOutside(() => {\r\n        setShowStatus(false);\r\n    });\r\n\r\n    const allProp = {\r\n        ...props,\r\n        refSorted,\r\n        refUnsorted,\r\n        refShadow,\r\n        phraseRu,\r\n        listUnsorted,\r\n        result,\r\n        showStatus,\r\n        checkPhrase,\r\n        refOutLink\r\n    }\r\n\r\n    return <Wrapped {...allProp} />;\r\n}\r\n\r\nexport default containerBlockTranslation;","import styled from \"styled-components\";\r\nimport {mainBg, widthOptimal} from \"../../../styles\";\r\n\r\nconst StyledApp = styled.div`\r\n    display: flex;\r\n    min-height: 100vh;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: ${mainBg};\r\n    @media (max-width: ${widthOptimal}) {\r\n        align-items: flex-start;\r\n    }\r\n`\r\n\r\nexport {StyledApp};","import React from \"react\";\r\nimport BlockTranslation from \"../../organisms/block-translation\";\r\nimport {StyledApp} from \"./styles\";\r\n\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <StyledApp>\r\n            <BlockTranslation/>\r\n        </StyledApp>\r\n    );\r\n}\r\n\r\n\r\nexport default App","import React from \"react\";\r\nimport App from \"../../templates/app\";\r\n\r\n\r\nconst Main: React.FC = () => {\r\n    return <App/>;\r\n}\r\n\r\n\r\nexport default Main","import ReactDOM from 'react-dom';\nimport ApolloClient from \"apollo-boost\";\nimport {ApolloProvider} from \"react-apollo\";\nimport GlobalStyle from \"./styles\";\nimport Main from \"./components/pages/main\";\n\nconst client = new ApolloClient({\n    uri: process.env.REACT_APP_DB_URL\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <GlobalStyle/>\n        <Main/>\n    </ApolloProvider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}